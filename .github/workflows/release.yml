name: Release (npm)

on:
  push:
    tags:
      - 'v*.*.*'   # push tags like v0.1.1 to trigger
  workflow_dispatch: {}  # optional: manual run button

permissions:
  contents: write
  id-token: write   # needed for npm provenance
  packages: write

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        # do NOT set "with: version" here; it will use package.json "packageManager": "pnpm@9.15.9"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.7.3     # keep consistent with your project
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Safety: ensure the pushed tag equals the version in package.json (e.g. tag v0.1.1 == "0.1.1")
      - name: Verify tag matches package.json version
        run: |
          TAG="${GITHUB_REF##*/}"                      # e.g. v0.1.1
          PKG_VERSION="$(node -p "require('./package.json').version")"
          if [ "v${PKG_VERSION}" != "${TAG}" ]; then
            echo "::error::Tag ${TAG} does not match package.json version v${PKG_VERSION}"
            exit 1
          fi
          echo "Releasing ${TAG}"

      - name: Test
        env:
          CI: true
        run: pnpm run test -- --run

      - name: Build
        run: pnpm run build

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true    # ensure provenance with npm
        run: npm publish --provenance --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
