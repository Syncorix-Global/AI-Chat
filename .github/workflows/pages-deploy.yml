name: pages-deploy

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  # Build VitePress docs and upload artifact
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build docs
        uses: ./.github/actions/build-docs
        with:
          artifact-name: docs-dist

  # Build playground and upload artifact
  build-playground:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build playground
        uses: ./.github/actions/build-playground
        with:
          artifact-name: playground-dist
          base-subpath: "/${{ github.event.repository.name }}/playground/"

  # Merge artifacts and deploy to Pages
  merge-and-deploy:
    runs-on: ubuntu-latest
    needs: [ build-docs, build-playground ]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Download docs
        uses: actions/download-artifact@v4
        with:
          name: docs-dist
          path: site/docs

      - name: Flatten docs artifact
        run: |
          shopt -s dotglob
          if [ -d "site/docs/docs-dist" ]; then
            mv site/docs/docs-dist/* site/docs/
            rmdir site/docs/docs-dist
          fi

      - name: Download playground
        uses: actions/download-artifact@v4
        with:
          name: playground-dist
          path: site/playground

      - name: Flatten playground artifact
        run: |
          shopt -s dotglob
          if [ -d "site/playground/playground-dist" ]; then
            mv site/playground/playground-dist/* site/playground/
            rmdir site/playground/playground-dist
          fi

      - name: Merge playground into docs site
        run: |
          mkdir -p site/docs/playground
          cp -r site/playground/* site/docs/playground/ || true

      - name: Ensure homepage (robust)
        run: |
          set -e
          ROOT=site/docs
          if [ -f "$ROOT/index.html" ]; then
            echo "Found root index.html"
            exit 0
          fi

          pick_target () {
            if [ -f "$ROOT/guide/overview.html" ]; then echo "guide/overview.html"; return; fi
            if [ -f "$ROOT/overview.html" ]; then echo "overview.html"; return; fi
            for p in guide socket typing; do
              if [ -f "$ROOT/$p/overview.html" ]; then echo "$p/overview.html"; return; fi
              hit=$(find "$ROOT/$p" -maxdepth 1 -type f -name '*.html' 2>/dev/null | head -n1)
              if [ -n "$hit" ]; then echo "${hit#$ROOT/}"; return; fi
            done
            hit=$(find "$ROOT" -maxdepth 1 -type f -name '*.html' ! -name '404.html' ! -name 'index.html' | head -n1)
            if [ -n "$hit" ]; then echo "${hit#$ROOT/}"; return; fi
            echo ""
          }

          TARGET=$(pick_target)
          if [ -z "$TARGET" ]; then
            echo "No suitable entry page found under $ROOT"
            ls -la "$ROOT"
            exit 1
          fi

          echo "Creating redirect index.html to $TARGET"
          echo '<!doctype html><meta http-equiv="refresh" content="0; url='"$TARGET"'"><link rel="canonical" href="'"$TARGET"'">' > "$ROOT/index.html"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
