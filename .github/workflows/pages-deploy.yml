name: pages-deploy

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build docs
        uses: ./.github/actions/build-docs
        with:
          artifact-name: docs-dist

  build-playground:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build playground
        uses: ./.github/actions/build-playground
        with:
          artifact-name: playground-dist
          base-subpath: "/${{ github.event.repository.name }}/playground/"

  merge-and-deploy:
    runs-on: ubuntu-latest
    needs: [ build-docs, build-playground ]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Download docs
        uses: actions/download-artifact@v4
        with:
          name: docs-dist
          path: site/docs

      - name: Flatten docs artifact
        run: |
          shopt -s dotglob
          if [ -d "site/docs/docs-dist" ]; then
            mv site/docs/docs-dist/* site/docs/
            rmdir site/docs/docs-dist
          fi

      - name: Download playground
        uses: actions/download-artifact@v4
        with:
          name: playground-dist
          path: site/playground

      - name: Flatten playground artifact
        run: |
          shopt -s dotglob
          if [ -d "site/playground/playground-dist" ]; then
            mv site/playground/playground-dist/* site/playground/
            rmdir site/playground/playground-dist
          fi

      - name: Merge playground into docs site
        run: |
          mkdir -p site/docs/playground
          cp -r site/playground/* site/docs/playground/ || true

      - name: Ensure homepage
        run: |
          ROOT=site/docs
          if [ ! -f "$ROOT/index.html" ]; then
            TARGET=""
            if [ -f "$ROOT/guide/index.html" ]; then
              TARGET="guide/"
            elif [ -f "$ROOT/guide/overview/index.html" ]; then
              TARGET="guide/overview/"
            fi
            if [ -n "$TARGET" ]; then
              echo "Creating redirect index.html to $TARGET"
              echo '<!doctype html><meta http-equiv="refresh" content="0; url='"$TARGET"'"><link rel="canonical" href="'"$TARGET"'">' > "$ROOT/index.html"
            else
              echo "No index.html found and no fallback target"
              ls -la "$ROOT"
              exit 1
            fi
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
